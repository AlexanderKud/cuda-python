name: Upload

on:
  workflow_call:
    inputs:
      client-repo:
        required: true
        type: string
      build-type:
        required: true
        type: string
      name:
        required: true
        type: string
      target-device:
        required: true
        type: string
      platform:
        required: true
        type: string
      build-mode:
        required: true
        type: string
      upload-enabled:
        required: true
        type: boolean
      upload-action:
        required: true
        type: string
      pkgSubString:
        required: true
        type: string
      repos-Root:
        required: true
        type: string
      python-version:
        required: false
        type: string

jobs:
  upload:
    name: ${{ inputs.name }}
    if: github.repository_owner == 'nv-legate'
    runs-on: linux-amd64-gpu-v100-earliest-1

    container:
      options: -u root --security-opt seccomp=unconfined --privileged
      image: condaforge/miniforge3:latest
      env:
        ARTIFACT_SERVER: "https://urm.nvidia.com/artifactory"
        ARTIFACT_REPOS: "sw-legate-conda-local"
        OUTPUT_FOLDER: "conda-build/${{ inputs.repos-Root }}"

    defaults:
      run:
        shell: bash --noprofile --norc -xeuo pipefail {0}

    steps:
      - name: Setup env variables
        uses: ./.github/actions/setup
        with:
          client-repo: ${{ inputs.client-repo }}
          build-type: ${{ inputs.build-type }}
          target-device: "${{ inputs.target-device }}"
          platform: ${{ inputs.platform }}
          build-mode: ${{ inputs.build-mode }}
          upload-enabled: ${{ inputs.upload-enabled }}
          python-version: ${{ inputs.python-version }}

      - name: Call upload action
        uses: ./.github/actions/upload
        with:
          urmToken: ${{ secrets.URM_ARTIFACT_TOKEN }}
          upload-action: ${{ inputs.upload-action }}
          pkgSubString: ${{ inputs.pkgSubString }}
