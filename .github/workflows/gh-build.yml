name: Build

on:
  workflow_call:
    inputs:
      client-repo:
        required: true
        type: string
      target-device:
        required: true
        type: string
      runs-on:
        required: true
        type: string
      build-type:
        required: true
        type: string
        description: One of ci / release
      use-container:
        required: true
        type: boolean
      platform:
        required: true
        type: string
      dependencies-file:
        required: true
        type: string
        description: path to versions.json relative to the target repo dir
      build-mode:
        required: true
        type: string
      upload-enabled:
        required: true
        type: boolean
      python-version:
        required: false
        type: string

jobs:
  build:
    name: Build (${{ inputs.platform }}, ${{ inputs.target-device }}, ${{ inputs.build-type }}, CMake build-mode=${{ inputs.build-mode }}, Python "${{ inputs.python-version }}", Use container=${{ inputs.use-container }} )

    permissions:
      id-token: write # This is required for configure-aws-credentials
      contents: read  # This is required for actions/checkout

    runs-on: ${{ inputs.runs-on }}

    steps:
      - name: Checkout ${{ inputs.client-repo }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/actions/setup
        with:
          client-repo: ${{ inputs.client-repo }}
          build-type: ${{ inputs.build-type }}
          target-device: "${{ inputs.target-device }}"
          platform: ${{ inputs.platform }}
          build-mode: ${{ inputs.build-mode }}
          upload-enabled: ${{ inputs.upload-enabled }}
          python-version: ${{ inputs.python-version }}

      - name: Render templates
        shell: bash --noprofile --norc -xeuo pipefail {0}
        run: |
          pip -q install jinja2

          DEPENDENCIES_FILE=""

          if [ -z "${{ inputs.dependencies-file }}" ]; then
            DEPENDENCIES_FILE="${REPO_DIR}/continous_integration/no_dependencies.json"
          else
            DEPENDENCIES_FILE="${REPO_DIR}/${{ inputs.dependencies-file }}"
          fi

          ${REPO_DIR}/continous_integration/scripts/render-template.py ${REPO_DIR}/.github/actions/build/action.yml.j2 "${DEPENDENCIES_FILE}" ${REPO_DIR}/.github/actions/build/action.yml

      - name: Dump templates
        shell: bash --noprofile --norc -xeuo pipefail {0}
        run: |
          echo ${REPO_DIR}/.github/actions/build/action.yml
          cat ${REPO_DIR}/.github/actions/build/action.yml

      - name: Call build action
        uses: ./.github/actions/build
        with:
          build-type: ${{ inputs.build-type }}
          target-device: "${{ inputs.target-device }}"
          platform: ${{ inputs.platform }}
          use-container: ${{ inputs.use-container }}
          docker-image: "condaforge/miniforge3:latest"
          inter-repos-ro-access-token: ${{ secrets.NV_LEGATE_INTER_REPOS_ACCESS_RO }}
          upload-enabled: ${{ inputs.upload-enabled }}
