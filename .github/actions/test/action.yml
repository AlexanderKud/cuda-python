name: test

description: Run tests in specified project

inputs:
  host-platform:
    required: true
    type: string
  cuda-version:
    required: true
    type: string
  test-options:
    required: true
    type: string

runs:
  using: composite
  steps:
    - name: Run nvidia-smi to make sure GPU is working
      shell: bash --noprofile --norc -xeuo pipefail {0}
      run: nvidia-smi

    # The cache action needs this
    - name: Install zstd
      shell: bash --noprofile --norc -xeuo pipefail {0}
      run: |
        apt update
        apt install zstd

    - name: Download bindings build artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.CUDA_BINDINGS_ARTIFACT_NAME }}
        path: ${{ env.CUDA_BINDINGS_ARTIFACTS_DIR }}

    - name: Display structure of downloaded bindings artifacts
      shell: bash --noprofile --norc -xeuo pipefail {0}
      run: |
        pwd
        ls -lahR $CUDA_BINDINGS_ARTIFACTS_DIR

    - name: Download core build artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.CUDA_CORE_ARTIFACT_NAME }}
        path: ${{ env.CUDA_CORE_ARTIFACTS_DIR }}

    - name: Display structure of downloaded core build artifacts
      shell: bash --noprofile --norc -xeuo pipefail {0}
      run: |
        pwd
        ls -lahR $CUDA_CORE_ARTIFACTS_DIR

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Set up mini CTK
      uses: ./.github/actions/fetch_ctk
      continue-on-error: false
      with:
        host-platform: ${{ inputs.host-platform }}
        cuda-version: ${{ inputs.cuda-version }}
        fail-on-ctk-cache-miss: true

    - name: Run test / analysis
      shell: bash --noprofile --norc -xeuo pipefail {0}
      run: |
        ls $CUDA_PATH

        REPO_DIR=$(pwd)

        cd "${CUDA_BINDINGS_ARTIFACTS_DIR}"
        pip install *.whl

        cd "${CUDA_CORE_ARTIFACTS_DIR}"
        pip install *.whl

        cd "${REPO_DIR}/cuda_bindings"
        pip install -r requirements.txt
        pytest tests/
        #pytest tests/cython

        cd "${REPO_DIR}/cuda_core"
        pytest -rxXs tests/
